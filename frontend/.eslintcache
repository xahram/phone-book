[{"C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\App.js":"2","C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\store\\reducers\\contacts.js":"4","C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\store\\actionTypes.js":"5","C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\components\\Layout\\Layout.js":"6","C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\components\\AddContact\\AddContact.js":"7","C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\components\\ContactsPage\\ContactsPage.js":"8","C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\components\\AddContact\\Input\\Input.js":"9","C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\components\\AddContact\\FileUpload\\FileUpload.js":"10","C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\utils\\axios.js":"11","C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\utils\\socket-io.js":"12","C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\components\\ContactsPage\\Contacts\\Contacts.js":"13","C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\components\\ContactsPage\\ContactInfo\\ContactInfo.js":"14","C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\store\\actions\\contactsActions.js":"15","C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\components\\UI\\Spinner\\Spinner.js":"16","C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\components\\AddContact\\FileUpload\\Image\\Image.js":"17","C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\components\\ContactsPage\\Contacts\\Contact\\Contact.js":"18"},{"size":1004,"mtime":1611581483005,"results":"19","hashOfConfig":"20"},{"size":905,"mtime":1612617354521,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":509,"mtime":1611668323350,"results":"23","hashOfConfig":"20"},{"size":105,"mtime":1611663670144,"results":"24","hashOfConfig":"20"},{"size":293,"mtime":1611771853273,"results":"25","hashOfConfig":"20"},{"size":9311,"mtime":1612613438242,"results":"26","hashOfConfig":"20"},{"size":1134,"mtime":1612617600678,"results":"27","hashOfConfig":"20"},{"size":1451,"mtime":1611760346660,"results":"28","hashOfConfig":"20"},{"size":1474,"mtime":1612612759521,"results":"29","hashOfConfig":"20"},{"size":168,"mtime":1611586842172,"results":"30","hashOfConfig":"20"},{"size":113,"mtime":1612284891314,"results":"31","hashOfConfig":"20"},{"size":505,"mtime":1612617403020,"results":"32","hashOfConfig":"20"},{"size":2859,"mtime":1612617440566,"results":"33","hashOfConfig":"20"},{"size":953,"mtime":1611668856378,"results":"34","hashOfConfig":"20"},{"size":202,"mtime":1612615649002,"results":"35","hashOfConfig":"20"},{"size":330,"mtime":1612614392522,"results":"36","hashOfConfig":"20"},{"size":555,"mtime":1612610373903,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"k3q3zk",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\index.js",[],["78","79"],"C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\App.js",[],"C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\store\\reducers\\contacts.js",[],"C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\store\\actionTypes.js",[],"C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\components\\Layout\\Layout.js",[],"C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\components\\AddContact\\AddContact.js",["80","81"],"import React from 'react';\r\nimport Input from './Input/Input';\r\nimport classes from './AddContact.module.css'\r\nimport FileUPload from './FileUpload/FileUpload';\r\nimport axios from '../../utils/axios'\r\nimport { toast } from 'react-hot-toast';\r\nimport Spinner from '../UI/Spinner/Spinner'\r\n// import parsePhoneNumber from 'libphonenumber-js';\r\n// import { unstable_batchedUpdates } from 'react-dom'\r\n// import { batch } from 'react-redux'\r\nexport default class AddContact extends React.Component {\r\n    state = {\r\n        contactForm: {\r\n            name: {\r\n                elementType: \"input\",\r\n                value: \"\",\r\n                valid: true,\r\n                errorMessage: \"Address Should be between 3-30 characters without special character\",\r\n                elementConfig: {\r\n                    placeholder: \"Enter Your name\",\r\n                    type: 'text'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 3,\r\n                    maxLength: 30,\r\n                }\r\n            },\r\n            phone: {\r\n                elementType: \"input\",\r\n                value: \"\",\r\n                valid: true,\r\n                errorMessage: \"Please provide Valid number\",\r\n                elementConfig: {\r\n                    placeholder: \"Enter Your phone\",\r\n                    type: 'text'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n\r\n                }\r\n            },\r\n            address: {\r\n                elementType: \"input\",\r\n                value: \"\",\r\n                valid: true,\r\n                errorMessage: \"Address Should be between 2-200 character\",\r\n                elementConfig: {\r\n                    placeholder: \"Enter Your address\",\r\n                    type: 'text'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    maxLength: 200,\r\n                    minLength: 2,\r\n                }\r\n            },\r\n            gender: {\r\n                elementType: \"select\",\r\n                value: \"\",\r\n                elementConfig: [\r\n                    'Male', \"Female\"\r\n                ],\r\n\r\n            },\r\n            bio: {\r\n                elementType: \"input\",\r\n                value: \"\",\r\n                valid: true,\r\n                errorMessage: \"Address Should be between 20-500 character\",\r\n                elementConfig: {\r\n                    placeholder: \"Enter Your bio\",\r\n                    type: 'text'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    maxLength: 500,\r\n                    minLength: 20,\r\n                }\r\n            },\r\n\r\n        },\r\n        file: true,\r\n        img: null,\r\n        loading: true\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            this.setState({ loading: false })\r\n        }, 2000)\r\n    }\r\n    onChangeHandler = (e, identifier) => {\r\n        const updatedcontactForm = { ...this.state.contactForm };\r\n        const updatedElement = { ...updatedcontactForm[identifier] };\r\n        updatedElement.value = e.target.value;\r\n        updatedElement.valid = true;\r\n        console.log(e.target.value)\r\n        updatedcontactForm[identifier] = updatedElement\r\n        this.setState({ contactForm: updatedcontactForm })\r\n    }\r\n\r\n    checkFilehandler = (validity, img) => {\r\n        if (img) {\r\n            this.setState({ file: validity, img: img }, () => {\r\n                console.log(validity, this.state.file)\r\n            })\r\n        } else {\r\n            this.setState({ file: validity }, () => {\r\n                console.log(validity, this.state.file)\r\n            })\r\n        }\r\n    }\r\n\r\n    isFormValid = () => {\r\n        let isValid = false;\r\n\r\n        const nameFormat = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n        const phonenoFormat = /^\\(?([0-9]{4})\\)?[-. ]?([0-9]{7})$/;\r\n\r\n        // console.log(nameFormat.test(this.state.contactForm.name.value))\r\n        // console.log(phonenoFormat.test(this.state.contactForm.phone.value))\r\n\r\n        if (this.state.contactForm.name.value < 3 || this.state.contactForm.name.value > 30 || nameFormat.test(this.state.contactForm.name.value)) {\r\n            this.setState((state) => ({ contactForm: { ...state.contactForm, name: { ...state.contactForm.name, valid: false } } }), () => {\r\n                console.log(\"name\", this.state.contactForm.name.valid)\r\n                isValid = (this.state.contactForm.name.valid && this.state.contactForm.phone.valid)\r\n            })\r\n        }\r\n        if (!phonenoFormat.test(this.state.contactForm.phone.value)) {\r\n            this.setState((state) => ({ contactForm: { ...state.contactForm, phone: { ...state.contactForm.phone, valid: false } } }), () => {\r\n                console.log(\"phone\", this.state.contactForm.phone.valid)\r\n                isValid = (this.state.contactForm.name.valid && this.state.contactForm.phone.valid)\r\n            })\r\n        }\r\n        else {\r\n            isValid = true\r\n        }\r\n        // if (this.state.contactForm.bio.value < 20 || this.state.contactForm.bio.value > 500) {\r\n        //     this.setState((state) => ({ contactForm: { ...state.contactForm, bio: { ...state.contactForm.bio, valid: false } } }), () => {\r\n        //         console.log(\"name\", this.state.contactForm.name.valid)\r\n        //         isValid = (this.state.contactForm.address.valid && this.state.contactForm.bio.valid && this.state.contactForm.name.valid && this.state.contactForm.phone.valid)\r\n        //     })\r\n        // }\r\n        // if (this.state.contactForm.address.value < 2 || this.state.contactForm.address.value > 200) {\r\n        //     this.setState((state) => ({ contactForm: { ...state.contactForm, address: { ...state.contactForm.address, valid: false } } }), () => {\r\n        //         console.log(\"name\", this.state.contactForm.name.valid)\r\n        //         isValid = (this.state.contactForm.address.valid && this.state.contactForm.bio.valid && this.state.contactForm.name.valid && this.state.contactForm.phone.valid)\r\n        //     })\r\n        // }\r\n        // const phoneNumber = parsePhoneNumber(this.state.contactForm.phone.value, \"PK\");\r\n        // if (phoneNumber) phoneNumber.isValid()\r\n\r\n        console.log(isValid)\r\n        return isValid\r\n    }\r\n\r\n\r\n    onSubmithandler = (e) => {\r\n        e.preventDefault()\r\n        const valid = this.isFormValid()\r\n\r\n        if (valid && this.state.file) {\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'multipart/form-data'\r\n                }\r\n            }\r\n            const formData = new FormData()\r\n            formData.append('profile', this.state.img)\r\n            formData.append('name', this.state.contactForm.name.value)\r\n            formData.append('address', this.state.contactForm.address.value)\r\n            formData.append('bio', this.state.contactForm.bio.value)\r\n            formData.append('phoneNumber', this.state.contactForm.phone.value)\r\n\r\n            axios.post(\"http://127.0.0.1:5000/api/v1/add-contact\", formData, config)\r\n                .then((res) => {\r\n                    if (res.status === 200) return toast.success(\"User Added To Your Contact\")\r\n\r\n                    toast.error(\"Oops! Something Went Wrong!\")\r\n\r\n                })\r\n                .catch((err) => {\r\n                    toast.error(\"Oops! Something Went Wrong!\")\r\n                })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let addContact = <Spinner />\r\n        if (!this.state.loading) {\r\n            const keys = Object.keys(this.state.contactForm)\r\n            const inputElements = keys.map((identifier) => {\r\n                const config = this.state.contactForm[identifier]\r\n                // console.log(identifier)\r\n                return <Input key={identifier}\r\n                    onChangeHandler={(event) => { this.onChangeHandler(event, identifier) }}\r\n                    label={identifier}\r\n                    element={config.elementType}\r\n                    type={config.elementConfig?.type}\r\n                    value={config.value}\r\n                    placeholder={config.elementConfig?.placeholder}\r\n                    elementConfig={config.elementConfig}\r\n                    minLength={config.validation?.minLength}\r\n                    maxLength={config.validation?.maxLength}\r\n                    required={config.validation?.required}\r\n                    valid={config.valid}\r\n                    errorMessage={config.errorMessage}\r\n                />\r\n            })\r\n            addContact = (<div className={classes.Contact}>\r\n                <h1>Add Contact</h1>\r\n                <form onSubmit={this.onSubmithandler} className={classes.AddContact}>\r\n                    <div data-aos=\"zoom-in-up\">\r\n                        <div>\r\n                            {inputElements}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <FileUPload valid={this.state.file} checkFilehandler={this.checkFilehandler} />\r\n                        <button className={classes.btn} type=\"submit\">Add Contact</button>\r\n                    </div>\r\n                </form>\r\n            </div>)\r\n\r\n        }\r\n\r\n        return addContact\r\n    }\r\n}","C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\components\\ContactsPage\\ContactsPage.js",["82"],"import React from 'react'\r\nimport Contacts from './Contacts/Contacts'\r\nimport ContactInfo from './ContactInfo/ContactInfo'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../store/actions/contactsActions'\r\nimport classes from './ContactsPage.module.css';\r\nimport { Route } from 'react-router-dom'\r\n\r\n\r\nconst ContactsPage = (props) => {\r\n\r\n    function onClickHandler() { }\r\n    console.log(props)\r\n    React.useEffect(() => {\r\n        props.getContactsList(props.history)\r\n    }, [])\r\n    return (<div data-aos=\"zoom-in\" className={classes.ContactsPage}>\r\n        <Contacts onClick={onClickHandler} contactlist={props.contacts} />\r\n        <Route path=\"/:id\" render={() => { return (<ContactInfo ></ContactInfo>) }} />\r\n        {/* <ContactInfo></ContactInfo> */}\r\n\r\n    </div>)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contacts\r\n    }\r\n}\r\nconst mapActionsToDispatch = (dispatch) => {\r\n    return {\r\n        getContactsList: (history) => { dispatch(actions.getContactsList(history)) }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapActionsToDispatch)(ContactsPage);","C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\components\\AddContact\\Input\\Input.js",[],"C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\components\\AddContact\\FileUpload\\FileUpload.js",[],"C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\utils\\axios.js",[],"C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\utils\\socket-io.js",[],"C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\components\\ContactsPage\\Contacts\\Contacts.js",[],"C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\components\\ContactsPage\\ContactInfo\\ContactInfo.js",["83"],"import React from 'react'\r\nimport classes from './ContactInfo.module.css'\r\nimport { connect } from 'react-redux';\r\nimport * as actionTypes from '../../../store/actionTypes'\r\nimport { NavLink, withRouter } from 'react-router-dom'\r\n\r\nconst ContactInfo = (props) => {\r\n    console.log(props)\r\n    React.useEffect(() => {\r\n        // This will cause issur that currUser is undefined \r\n        // thats because when we directly type something as id in url\r\n        // then this params id will be true on first time this useeffect runs\r\n        // also keep in mind that this will run first before its parent's useeffect\r\n        // hence no dispatch and hence state of contact list will be empty [] \r\n        // causing to acces contact[0] => undefined\r\n        if (props.match.params.id && props.contacts.length) {\r\n            const id = props.match.params.id.slice(1, props.match.params.id.length)\r\n            const currUser = props.contacts.filter((curr) => {\r\n                return id === curr.id\r\n            })\r\n            props.getCurrentUser(currUser[0])\r\n            // console.log(props)\r\n        }\r\n        console.log(props.match.params.id)\r\n    }, [props.match.params.id])\r\n    return (<>\r\n        <div data-aos=\"fade-left\" className={classes.ContactInfo}>\r\n            <h1>Contact Details</h1>\r\n            <div className={classes.MainContent}>\r\n                <div className={classes.profiledata}>\r\n                    <div>\r\n                        <img\r\n                            src={props.currentUser.profilePic\r\n                                ? 'http://localhost:5000' + props.currentUser.profilePic\r\n                                : \"https://cdn0.iconfinder.com/data/icons/social-media-network-4/48/male_avatar-512.png\"}\r\n                            alt=\"profile\" />\r\n                    </div>\r\n                    <div>\r\n                        <p><i class=\"fas fa-user\"></i>  {props.currentUser.name}</p>\r\n                        <p><i class=\"fas fa-phone\"></i>  {props.currentUser.phoneNumber}</p>\r\n                        <p><i class=\"fas fa-map-marker-alt\"></i>  {props.currentUser.address}</p>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.bio}>\r\n                    <p>{props.currentUser.bio}</p>\r\n                </div>\r\n                <NavLink to=\"/add-contact\"> <button className={classes.btn}>Add New Contact</button></NavLink>\r\n            </div>\r\n        </div></>)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contacts,\r\n        currentUser: state.currentUser\r\n    }\r\n}\r\nconst mapActionToProps = (dispatch) => {\r\n    return {\r\n        getCurrentUser: (currUser) => { dispatch({ type: actionTypes.GET_CURRENT_USER, currentUser: currUser }) }\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapActionToProps)(ContactInfo))","C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\store\\actions\\contactsActions.js",[],"C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\components\\UI\\Spinner\\Spinner.js",[],"C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\components\\AddContact\\FileUpload\\Image\\Image.js",[],"C:\\Users\\HP\\Desktop\\Projects\\phone-book\\frontend\\src\\components\\ContactsPage\\Contacts\\Contact\\Contact.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":120,"column":46,"nodeType":"90","messageId":"91","endLine":120,"endColumn":47,"suggestions":"92"},{"ruleId":"88","severity":1,"message":"93","line":120,"column":63,"nodeType":"90","messageId":"91","endLine":120,"endColumn":64,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":16,"column":8,"nodeType":"97","endLine":16,"endColumn":10,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"96","line":25,"column":8,"nodeType":"97","endLine":25,"endColumn":31,"suggestions":"99"},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["102","103"],"Unnecessary escape character: \\/.",["104","105"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.","ArrayExpression",["106"],["107"],"no-global-assign","no-unsafe-negation",{"messageId":"108","fix":"109","desc":"110"},{"messageId":"111","fix":"112","desc":"113"},{"messageId":"108","fix":"114","desc":"110"},{"messageId":"111","fix":"115","desc":"113"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"removeEscape",{"range":"120","text":"121"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"122","text":"123"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"124","text":"121"},{"range":"125","text":"123"},"Update the dependencies array to be: [props]",{"range":"126","text":"127"},"Update the dependencies array to be: [props, props.match.params.id]",{"range":"128","text":"129"},[3846,3847],"",[3846,3846],"\\",[3863,3864],[3863,3863],[501,503],"[props]",[1160,1183],"[props, props.match.params.id]"]